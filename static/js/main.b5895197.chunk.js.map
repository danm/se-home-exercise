{"version":3,"sources":["Header/style.ts","Header/index.tsx","Home/style.ts","Home/index.tsx","About/style.ts","About/index.tsx","Articles/style.ts","Articles/index.tsx","serviceWorker.ts","index.tsx"],"names":["Root","styled","div","_templateObject","Container","_templateObject2","Nav","nav","_templateObject3","H1","h1","_templateObject4","Ul","ul","_templateObject5","Li","li","_templateObject6","Header","react_default","a","createElement","className","react_router_dom","to","P","p","style_templateObject","H2","h2","style_templateObject2","Home","src_Header","href","About_style_templateObject","About_style_templateObject2","H3","h3","style_templateObject3","About","style_H2","style_P","Table","table","Articles_style_templateObject","Articles_style_templateObject2","data1","require","data2","Articles","rows","hits","concat","slice","map","_ref","_source","key","cpsid","l1","date","Date","toLocaleString","views","siteName","type","sectionName","headline","firstPublished","Articles_style_H2","Boolean","window","location","hostname","match","ReactDOM","render","react_router","path","exact","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b5895197.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Root = styled.div`\n  background-color: #1f1c1f;\n`;\n\nconst Container = styled.div``;\n\nconst Nav = styled.nav``;\n\nconst H1 = styled.h1`\n  color: white;\n  padding: 20px 0 0 0;\n`;\n\nconst Ul = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0 0 20px 0;\n`;\n\nconst Li = styled.li`\n  display: inline;\n  padding-right: 4px;\n\n  &.link > * {\n    color: #BDBDFF;\n    font-size: 22px;\n    padding: 10px;\n    :hover {\n      text-decoration: none;\n      background-color: white;\n      color: black;\n    }\n  }\n`;\n\nexport {\n  Root,\n  Container,\n  H1,\n  Nav,\n  Ul,\n  Li,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport {\n  Root,\n  Container,\n  H1,\n  Nav,\n  Ul,\n  Li,\n} from './style';\n\nfunction Header() {\n  return (\n    <Root>\n      <Container className=\"container\">\n        <H1>Data Solutions Software Engineer Interview Exercise</H1>\n        <Nav>\n          <Ul>\n            <Li className=\"link\">\n              <Link to=\"/\">Home</Link>\n            </Li>\n            <Li className=\"link\">\n              <Link to=\"/about\">About</Link>\n            </Li>\n            <Li className=\"link\">\n              <Link to=\"/articles\">Articles</Link>\n            </Li>\n          </Ul>\n        </Nav>\n      </Container>\n    </Root>\n  );\n}\n\nexport default Header;\n","import styled from 'styled-components';\n\nconst P = styled.p`\n  padding-top: 10px;\n\n  > a {\n    color: #2424FF;\n  }\n`;\n\nconst H2 = styled.h2`\n  margin-top: 24px;\n`;\n\nexport {\n  P,\n  H2,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Header from '../Header';\nimport { P, H2 } from './style';\n\nfunction Home() {\n  return (\n    <div>\n      <Header />\n      <article className=\"container\">\n        <H2>\n          Welcome\n        </H2>\n        <P>\n          This repo has been created as an at home exercise for Data Solutions\n          software engineer candidates. Click here to see the\n          <Link to=\"/about/\"> job spec</Link>\n          .\n        </P>\n        <P>\n          Visit\n          <a href=\"https://github.com/danm/se-home-exorcise/issues\"> Github issues </a>\n          to see a choice of possible tasks for this exercise.\n          Choose a maximum of 2 tasks and limit yourself to just 2 hours.\n          Don&apos;t worry if you havn&apos;t finished, commit your code and be ready\n          to talk about the changes you have made in a face to face interview.\n          Quality of execution is more important than quantity of it.\n        </P>\n        <h5>Things to think about</h5>\n        <ul>\n          <li>Accessibility</li>\n          <li>Browser compatibility</li>\n          <li>Tests</li>\n          <li>Types</li>\n          <li>Comments</li>\n        </ul>\n      </article>\n    </div>\n  );\n}\n\nexport default Home;\n","import styled from 'styled-components';\n\nconst P = styled.p`\n  padding-top: 10px;\n\n  > a {\n    color: #2424FF;\n  }\n`;\n\nconst H2 = styled.h2`\n  margin-top: 24px;\n`;\n\nconst H3 = styled.h3`\nmargin-top: 24px;\n`;\n\nexport {\n  P,\n  H2,\n  H3,\n};\n","import React from 'react';\nimport Header from '../Header';\nimport { P, H2, H3 } from './style';\n\nfunction About() {\n  return (\n    <div>\n      <Header />\n      <article className=\"container\">\n        <H2>\n          Job Introduction\n        </H2>\n        <P>\n          We are looking for an enthusiastic software engineer to join the Data Solutions\n          team working on Telescope.\n          Telescope is an in-house analytics tool born in the BBC newsroom and growing to\n          serve the rest of the organisation thanks to its friendly language and bespoke\n          charting for easy to understand visual data.\n        </P>\n        <P>\n          The tool is helping to deliver strategic organisational goals around engaging\n          young audiences and expanding our global reach. We hope to support our content\n          creators in their efforts by ensuring that as many of them as possible have\n          the relevant audience data to hand in order to make better, quicker decisions\n          about commissioning, optimisation and distribution.\n        </P>\n        <P>\n          The Data Solutions team is made up of both engineers and data scientists,\n          and we work closely together in order to ensure that we are\n          delivering accurate and meaningful data to our creators.\n        </P>\n        <P>\n          As the successful candidate, you will be joining an agile team who work in\n          bi-weekly sprints, using Scrum boards, following guides and designs from our\n          user experience team. You will be responsible for your own documentation and\n          tests, and will use Github to commit your code to be reviewed by your peers.\n          Be prepared to review other people&apos;s code too!\n        </P>\n        <H3>You will be using the following technologies:</H3>\n        <ul>\n          <li>\n            <b>Front end </b>\n            – React, Typescript, Styled Components (SASS), Jest, Apollo, D3\n          </li>\n          <li>\n            <b>Back end </b>\n            – NodeJS, ES2018, GraphQL, MongoDB, ElasticSearch, Redis\n          </li>\n          <li>\n            <b>Cloud </b>\n            –  AWS (EC2, S3, SQS, SES, Lambda, Cloudfront), Jenkins, Github\n          </li>\n          <i>\n            Do not worry if you do not know all of these, just be prepared to learn!\n          </i>\n        </ul>\n        <H3>Are you the right candidate?</H3>\n        <p>\n          We are looking for an engineer with a broad knowledge of web technologies\n          however it is not essential for the candidate to have a computer science\n          degree OR enterprise experience. We want to meet folks who have enthusiasm\n          for code, enjoy the task of problem solving and have a strong willingness\n          to learn. Additionally, we invite engineers who excel in backend code but\n          want to level up their front end skills and vice versa.\n        </p>\n      </article>\n    </div>\n  );\n}\n\nexport default About;\n","import styled from 'styled-components';\n\nconst Table = styled.table`\n  margin-top: 20px;\n  width: 100%;\n`;\n\nconst H2 = styled.h2`\n  margin-top: 24px;\n`;\n\nexport {\n  Table,\n  H2,\n};\n","import React from 'react';\n\nimport Header from '../Header';\nimport { IData } from './types';\nimport { Table, H2 } from './style';\n\n// continue to use commonjs till ts better supports esmodules, json and types.\nconst data1: IData = require('../data/r1.json');\nconst data2: IData = require('../data/r2.json');\n\nfunction Articles() {\n  // merge our data sets\n  const analytics = data1.hits.hits.concat(data2.hits.hits);\n\n  // limit to the first 25\n  const analyticsLimited = analytics.slice(0, 25);\n\n  // create a table row with mapped properties from analytics\n  const rows = analyticsLimited.map(({ _source }) => (\n    <tr key={`${_source.cpsid}-${_source.l1}-${_source.date}`}>\n      <td>{_source.cpsid}</td>\n      <td>{_source.l1}</td>\n      <td>{ new Date(_source.date).toLocaleString() }</td>\n      <td>{_source.views}</td>\n      <td>{_source.siteName}</td>\n      <td>{_source.type}</td>\n      <td>{_source.sectionName}</td>\n      <td>{_source.headline}</td>\n      <td>{ new Date(_source.firstPublished).toLocaleString() }</td>\n    </tr>\n  ));\n\n  return (\n    <div>\n      <Header />\n      <article className=\"container\">\n        <H2>\n          Articles\n        </H2>\n        <Table>\n          <thead>\n            <tr>\n              <th>cpsid</th>\n              <th>l1</th>\n              <th>date</th>\n              <th>views</th>\n              <th>siteName</th>\n              <th>type</th>\n              <th>sectionName</th>\n              <th>headline</th>\n              <th>firstPublished</th>\n            </tr>\n          </thead>\n          <tbody>\n            { rows }\n          </tbody>\n        </Table>\n      </article>\n    </div>\n  );\n}\n\nexport default Articles;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nfunction registerValidSW(swUrl: any, config: any) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: any, config: any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function register(config: any) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(`This web app is being served cache-first by a service \n            worker. To learn more, visit https://bit.ly/CRA-PWA`);\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport Home from './Home';\nimport About from './About';\nimport Articles from './Articles';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Route path=\"/\" exact component={Home} />\n    <Route path=\"/About/\" component={About} />\n    <Route path=\"/Articles/\" component={Articles} />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister(); // https://bit.ly/CRA-PWA\n"],"sourceRoot":""}